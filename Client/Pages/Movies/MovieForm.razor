<EditForm Model="Movie" OnValidSubmit="OnValidSubmit">
  <DataAnnotationsValidator />
  <div class="form-row">
    <div class="col">
      <label>Title:</label>
        <input type="text" class="form-control" placeholder="Movie Title" @bind-value="@Movie.Title" />
        <ValidationMessage For="@(() => Movie.Title)" />
    </div>
    <div class="col">
      <label>In Theaters:</label>         
      <InputCheckbox @bind-Value="@Movie.InTheaters" />
      <ValidationMessage For="@(() => Movie.InTheaters)" />
    </div>
  </div>
    
  <div class="form-group">
    <label>Trailer:</label>
    <div>
        <InputText class="form-control" @bind-Value="@Movie.Trailer" />
        <ValidationMessage For="@(() => Movie.Trailer)" />
    </div>
  </div>
  <div class="form-group">
    <label>Release Date:</label>
    <div>
      <InputDate @bind-Value="@Movie.ReleaseDate" />
      <ValidationMessage For="@(() => Movie.ReleaseDate)" />
    </div>
  </div>
  <div class="form-group">
    <ImgUpload Label="Picture" OnSelectedImage="PosterSelected" ImageURL="@imageURL" />
  </div>
  <div class="form-group form-markdown">
    <InputMarkdown @bind-Value="Movie.Summary" Label="Summary" For="@(() => Movie.Summary)" />
  </div>

  <button class="btn btn-primary" type="submit">Add Movie</button>
</EditForm>

@code {
  [Parameter]
  public Movie Movie { get; set; }
  [Parameter]
  public EventCallback OnValidSubmit { get; set; }
  private string imageURL;

  protected override void OnInitialized()
  {
    if (!string.IsNullOrEmpty(Movie.Poster))
    {
      imageURL = Movie.Poster;
      Movie.Poster = null;
    }
  }

  private void PosterSelected(string imageBase64)
  {
    Movie.Poster = imageBase64;
    imageURL = null;
    System.Console.WriteLine(imageBase64);
  }
}
